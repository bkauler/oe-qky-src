Description: Fix floats in PDF and PostScript
 Set LC_NUMERIC to POSIX before printing floats when building
 PostScript or PDF output.
Author: Julien BLACHE <jblache@debian.org>
Forwarded: yes

Index: xsane-0.998/src/xsane-save.c
===================================================================
--- xsane-0.998.orig/src/xsane-save.c	2010-11-16 22:06:00.000000000 +0100
+++ xsane-0.998/src/xsane-save.c	2011-02-04 19:51:01.557016000 +0100
@@ -26,6 +26,8 @@
 #include "xsane-back-gtk.h"
 #include "xsane-front-gtk.h"
 #include "xsane-save.h"
+#include <locale.h>
+#include <string.h>
 #include <time.h>
 #include <sys/wait.h> 
 
@@ -2415,6 +2417,7 @@
                                               int flatedecode)
 {
  int depth; 
+ char *save_locale;
 
   depth = image_info->depth;
 
@@ -2432,8 +2435,15 @@
 
   fprintf(outfile, "%d rotate\n", degree);
   fprintf(outfile, "%d %d translate\n", position_left, position_bottom);
+
+  save_locale = strdup(setlocale(LC_NUMERIC, NULL));
+  setlocale(LC_NUMERIC, "POSIX");
+
   fprintf(outfile, "%f %f scale\n", width, height);
 
+  setlocale(LC_NUMERIC, save_locale);
+  free(save_locale);
+
   fprintf(outfile, "<<\n");
   fprintf(outfile, " /ImageType 1\n");
   fprintf(outfile, " /Width %d\n", image_info->image_width);
@@ -3895,6 +3905,7 @@
  int position_left, position_bottom, box_left, box_bottom, box_right, box_top, depth;
  int left, bottom;
  float rad;
+ char *save_locale;
 
   DBG(DBG_proc, "xsane_save_pdf_create_page_header\n");
 
@@ -4009,8 +4020,16 @@
 
   fprintf(outfile, "q\n");
   fprintf(outfile, "1 0 0 1 %d %d cm\n", position_left, position_bottom); /* translate */
+
+  save_locale = strdup(setlocale(LC_NUMERIC, NULL));
+  setlocale(LC_NUMERIC, "POSIX");
+
   fprintf(outfile, "%f %f -%f %f 0 0 cm\n", cos(rad), sin(rad), sin(rad), cos(rad)); /* rotate */
   fprintf(outfile, "%f 0 0 %f 0 0 cm\n", width, height); /* scale */
+
+  setlocale(LC_NUMERIC, save_locale);
+  free(save_locale);
+
   fprintf(outfile, "BI\n");
   fprintf(outfile, "  /W %d\n", image_info->image_width);
   fprintf(outfile, "  /H %d\n", image_info->image_height);

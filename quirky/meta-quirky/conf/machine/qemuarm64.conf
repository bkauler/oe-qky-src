#@TYPE: Machine
#@NAME: generic armv8 machine
#@DESCRIPTION: Machine configuration for running a generic armv8

#TUNE_FEATURES_tune-aarch64 = "aarch64 fp-armv8 neon"
#DEFAULTTUNE = "aarch64 fp-armv8 neon"

DEFAULTTUNE ?= "aarch64"

require conf/machine/include/arm/arch-armv8.inc
require conf/machine/include/qemu.inc

#TUNE_CCARGS .= "${@bb.utils.contains('TUNE_FEATURES', 'aarch64', ' -march=armv8-a -mfloat-abi=hard -mfpu=neon-fp-armv8', '', d)}"
TUNE_CCARGS .= " -march=armv8-a -mfloat-abi=hard -mfpu=neon-fp-armv8"

KERNEL_IMAGETYPE = "Image"

SERIAL_CONSOLES ?= "38400;ttyAMA0 38400;hvc0"

MACHINE_FEATURES += "wifi bluetooth rtc vfat touchscreen"
MACHINE_EXTRA_RRECOMMENDS += "linux-firmware"
GLIBC_ADDONS = "nptl"

# For runqemu
QB_SYSTEM_NAME = "qemu-system-aarch64"
QB_MEM = "-m 512"
QB_MACHINE = "-machine virt"
QB_CPU = "-cpu cortex-a57"
QB_KERNEL_CMDLINE_APPEND = "console=ttyAMA0,38400"
# Add the 'virtio-rng-pci' device otherwise the guest may run out of entropy
QB_OPT_APPEND = "-show-cursor -device virtio-rng-pci -monitor null"
QB_TAP_OPT = "-netdev tap,id=net0,ifname=@TAP@,script=no,downscript=no"
QB_NETWORK_DEVICE = "-device virtio-net-device,netdev=net0,mac=@MAC@"
QB_ROOTFS_OPT = "-drive id=disk0,file=@ROOTFS@,if=none,format=raw -device virtio-blk-device,drive=disk0"
QB_SERIAL_OPT = "-device virtio-serial-device -chardev null,id=virtcon -device virtconsole,chardev=virtcon"
QB_TCPSERIAL_OPT = " -device virtio-serial-device -chardev socket,id=virtcon,port=@PORT@,host=127.0.0.1 -device virtconsole,chardev=virtcon"
